{
  "info": {
    "name": "SAPS_DB_API_Collection",
    "_postman_id": "41ecb4f6-3738-cccc-0246-9a1e558f8165",
    "description": "This is what we can get out of the SAPS API",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "dde3800c-94c2-c231-51a6-75a6f2a7b844",
      "name": "Course Controller",
      "description": "Where we test our Course Controller",
      "item": [
        {
          "_postman_id": "9748539f-b52f-1215-83c0-08a36316a453",
          "name": "GetListOfAllClasses",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3683a1b4-05b4-4126-b03e-71071b1c7230",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var classes = JSON.parse(responseBody);",
                  "",
                  "tests[\"Course ID has been found\"] = responseBody.has(\"courseId\");",
                  "tests[\"Course Abbreviation has been found\"] = responseBody.has(\"courseAbbreviation\");",
                  "tests[\"Course Number has been found\"] = responseBody.has(\"courseNumber\");",
                  "tests[\"Course Suffix has been found\"] = responseBody.has(\"courseSuffix\");",
                  "tests[\"Course Name has been found\"] = responseBody.has(\"courseName\");",
                  "tests[\"Course Level has been found\"] = responseBody.has(\"courseLevel\");",
                  "tests[\"Course Description has been found\"] = responseBody.has(\"courseDescription\");",
                  "tests[\"Sections has been found\"] = responseBody.has(\"sections\");",
                  "tests[\"Section ID has been found\"] = responseBody.has(\"sectionId\");",
                  "tests[\"Days has been found\"] = responseBody.has(\"days\");",
                  "tests[\"Start Time has been found\"] = responseBody.has(\"startTime\");",
                  "tests[\"End Time has been found\"] = responseBody.has(\"endTime\");",
                  "tests[\"Instructor has been found\"] = responseBody.has(\"instructor\");",
                  "",
                  "tests[\"Room has been found\"] = responseBody.has(\"room\");",
                  "tests[\"Term has been found\"] = responseBody.has(\"term\");",
                  "tests[\"Term Code has been found\"] = responseBody.has(\"termCode\");",
                  "tests[\"Term Name has been found\"] = responseBody.has(\"termName\");",
                  "tests[\"Term Year has been found\"] = responseBody.has(\"termYear\");",
                  "tests[\"Permission Number has been found\"] = responseBody.has(\"permissionNumber\");",
                  "tests[\"Message has been found\"] = responseBody.has(\"message\");",
                  "",
                  "",
                  "pm.test(\"Courses found successfully\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Courses found successfully\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "G-TOKEN",
                "value": "ROM831ESV"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://api.staging.csunsaps.com/api/class",
            "description": "This gets all of the Classes"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "f89045a3-29f7-4687-b1e9-84a40b3da472",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "1958510b-40e4-41bb-b0f4-aa51a5924f96",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "edfe8f76-13f9-e371-fd2c-76b168580dff",
      "name": "User Controller",
      "description": "Where we test our User Controller",
      "item": [
        {
          "_postman_id": "9aaf3b69-d994-4e43-1b18-6283ff771912",
          "name": "GetUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2287b063-1b1c-4605-b074-dcbbc0ff495f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "var user = JSON.parse(responseBody);",
                  "tests[\"User ID has been found\"] = responseBody.has(\"userId\");",
                  "tests[\"Role has been found\"] = responseBody.has(\"role\");",
                  "tests[\"Legal first name has been found\"] = responseBody.has(\"legalFirstName\");",
                  "tests[\"Legal Last name has been found\"] = responseBody.has(\"legalLastName\");",
                  "tests[\"Preferred first name has been found\"] = responseBody.has(\"preferredFirstName\");",
                  "tests[\"Preferred last name has been found\"] = responseBody.has(\"preferredLastName\");",
                  "tests[\"Phone number has been found\"] = responseBody.has(\"phoneNumber\");",
                  "tests[\"Email address has been found\"] = responseBody.has(\"emailAddress\");",
                  "tests[\"Claim has been found\"] = responseBody.has(\"claims\");",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": "https://api.staging.csunsaps.com/api/user/icl33037",
            "description": null
          },
          "response": []
        },
        {
          "_postman_id": "35b436e5-ce92-d26c-5136-c4586858835a",
          "name": "Fail: GetUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15826bff-5a4f-4e62-afc7-8737745a6b3c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Response is successful.\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"User dhs585867 not found in databse\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": "https://api.staging.csunsaps.com/api/user/dhs585867",
            "description": null
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "9a0168bd-58c8-1760-5388-b426ee74350c",
      "name": "Term Controller",
      "description": "Where we test our Term Controller",
      "item": [
        {
          "_postman_id": "6eeb2be9-81d6-c80a-73a0-2b27a75dfd75",
          "name": "Get Terms",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db29cbaf-c839-4751-9972-aae937027568",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Message is found\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Terms found successfully\");",
                  "});",
                  "",
                  "var term = JSON.parse(responseBody);",
                  "",
                  "tests[\"Term Code has been found\"] = responseBody.has(\"termCode\");",
                  "tests[\"Term Name has been found\"] = responseBody.has(\"termName\");",
                  "tests[\"Term Year has been found\"] = responseBody.has(\"termYear\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": "https://api.staging.csunsaps.com/api/term",
            "description": "This is where we test if the terms are found successfully or not, as well as what message is returned."
          },
          "response": []
        },
        {
          "_postman_id": "0992fb04-2fb1-6184-f321-ce2dbb749aff",
          "name": "Fail: Get Term",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7db7cacc-6928-4072-861e-3b88245f63f8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 250ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(250);",
                  "});",
                  "",
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Message is not found\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": "https://api.staging.csunsaps.com/api/term/2121",
            "description": "This is where we test if the terms are found successfully or not, as well as what message is returned."
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "af820438-fda8-4136-98ce-9d2e68b7610d",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "0c1b2bde-1342-4743-aebf-9d330ff152e8",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "174a9228-2180-5d1a-b593-f829f8544cb3",
      "name": "Request Controller",
      "description": "",
      "item": [
        {
          "_postman_id": "7abbcf89-5c81-7f42-098e-a28ec3b2a955",
          "name": "GetListOfRequestReviewedByUserId",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "01ed5101-c3c8-48ee-a4e3-5d094079dd25",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "tests[\"Student has been found\"] = responseBody.has(\"student\");",
                  "tests[\"User ID has been found\"] = responseBody.has(\"userId\");",
                  "tests[\"Role has been found\"] = responseBody.has(\"role\");",
                  "tests[\"Legal first name has been found\"] = responseBody.has(\"legalFirstName\");",
                  "tests[\"Legal Last name has been found\"] = responseBody.has(\"legalLastName\");",
                  "tests[\"Preferred first name has been found\"] = responseBody.has(\"preferredFirstName\");",
                  "tests[\"Preferred last name has been found\"] = responseBody.has(\"preferredLastName\");",
                  "tests[\"Phone number has been found\"] = responseBody.has(\"phoneNumber\");",
                  "tests[\"Email address has been found\"] = responseBody.has(\"emailAddress\");",
                  "tests[\"Claim has been found\"] = responseBody.has(\"claims\");",
                  "",
                  "tests[\"Request has been found\"] = responseBody.has(\"request\");",
                  "tests[\"Request ID has been found\"] = responseBody.has(\"requestId\");",
                  "tests[\"Date of Request has been found\"] = responseBody.has(\"dateOfRequest\");",
                  "tests[\"Date of Decision has been found\"] = responseBody.has(\"dateOfDecision\");",
                  "tests[\"Status Code has been found\"] = responseBody.has(\"statusCode\");",
                  "tests[\"Status has been found\"] = responseBody.has(\"status\");",
                  "tests[\"Decision User has been found\"] = responseBody.has(\"decisionUser\");",
                  "tests[\"Course ID has been found\"] = responseBody.has(\"courseId\");",
                  "tests[\"Course Abbreviation has been found\"] = responseBody.has(\"courseAbbreviation\");",
                  "tests[\"Course Number has been found\"] = responseBody.has(\"courseNumber\");",
                  "tests[\"Course Suffix has been found\"] = responseBody.has(\"courseSuffix\");",
                  "tests[\"Course Name has been found\"] = responseBody.has(\"courseName\");",
                  "tests[\"Course Level has been found\"] = responseBody.has(\"courseLevel\");",
                  "tests[\"Course Description has been found\"] = responseBody.has(\"courseDescription\");",
                  "tests[\"Sections has been found\"] = responseBody.has(\"sections\");",
                  "tests[\"Section ID has been found\"] = responseBody.has(\"sectionId\");",
                  "tests[\"Days has been found\"] = responseBody.has(\"days\");",
                  "tests[\"Start Time has been found\"] = responseBody.has(\"startTime\");",
                  "tests[\"End Time has been found\"] = responseBody.has(\"endTime\");",
                  "tests[\"Instructor has been found\"] = responseBody.has(\"instructor\");",
                  "tests[\"Room has been found\"] = responseBody.has(\"room\");",
                  "tests[\"Term has been found\"] = responseBody.has(\"term\");",
                  "tests[\"Term Code has been found\"] = responseBody.has(\"termCode\");",
                  "tests[\"Term Name has been found\"] = responseBody.has(\"termName\");",
                  "tests[\"Term Year has been found\"] = responseBody.has(\"termYear\");",
                  "tests[\"Permission Number has been found\"] = responseBody.has(\"permissionNumber\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "G-TOKEN",
                "value": "ROM831ESV"
              }
            ],
            "body": {},
            "url": "https://api.staging.csunsaps.com/api/request/reviewed",
            "description": "Where you can check the status of the request."
          },
          "response": []
        },
        {
          "_postman_id": "3609f8a8-c0b6-b2f8-8374-0ec43858526a",
          "name": "GetListOfRequestByUserId",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fe4dcb8c-28a7-4afe-888a-4325b7b8b3e7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var request = JSON.parse(responseBody);",
                  "",
                  "tests[\"Request has been found\"] = responseBody.has(\"request\");",
                  "tests[\"Request ID has been found\"] = responseBody.has(\"requestId\");",
                  "tests[\"Date of Request has been found\"] = responseBody.has(\"dateOfRequest\");",
                  "tests[\"Date of Decision has been found\"] = responseBody.has(\"dateOfDecision\");",
                  "tests[\"Status Code has been found\"] = responseBody.has(\"statusCode\");",
                  "tests[\"Status has been found\"] = responseBody.has(\"status\");",
                  "tests[\"Decision User has been found\"] = responseBody.has(\"decisionUser\");",
                  "tests[\"Course ID has been found\"] = responseBody.has(\"courseId\");",
                  "tests[\"Course Abbreviation has been found\"] = responseBody.has(\"courseAbbreviation\");",
                  "tests[\"Course Number has been found\"] = responseBody.has(\"courseNumber\");",
                  "tests[\"Course Suffix has been found\"] = responseBody.has(\"courseSuffix\");",
                  "tests[\"Course Name has been found\"] = responseBody.has(\"courseName\");",
                  "tests[\"Course Level has been found\"] = responseBody.has(\"courseLevel\");",
                  "tests[\"Course Description has been found\"] = responseBody.has(\"courseDescription\");",
                  "tests[\"Sections has been found\"] = responseBody.has(\"sections\");",
                  "tests[\"Section ID has been found\"] = responseBody.has(\"sectionId\");",
                  "tests[\"Days has been found\"] = responseBody.has(\"days\");",
                  "tests[\"Start Time has been found\"] = responseBody.has(\"startTime\");",
                  "tests[\"End Time has been found\"] = responseBody.has(\"endTime\");",
                  "tests[\"Instructor has been found\"] = responseBody.has(\"instructor\");",
                  "tests[\"Room has been found\"] = responseBody.has(\"room\");",
                  "tests[\"Term has been found\"] = responseBody.has(\"term\");",
                  "tests[\"Term Code has been found\"] = responseBody.has(\"termCode\");",
                  "tests[\"Term Name has been found\"] = responseBody.has(\"termName\");",
                  "tests[\"Term Year has been found\"] = responseBody.has(\"termYear\");",
                  "tests[\"Permission Number has been found\"] = responseBody.has(\"permissionNumber\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "G-TOKEN",
                "value": "ROM831ESV"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://api.staging.csunsaps.com/api/request/student/nnv11852",
            "description": "See the list of requests made by a specific user"
          },
          "response": []
        },
        {
          "_postman_id": "cd1630de-5b85-4e34-89cf-c064c1d4cd00",
          "name": "GetListOfRequestPendingByUserId",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aa3fab86-d563-49d9-b6cf-e28f49f19630",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "tests[\"Student has been found\"] = responseBody.has(\"student\");",
                  "tests[\"User ID has been found\"] = responseBody.has(\"userId\");",
                  "tests[\"Role has been found\"] = responseBody.has(\"role\");",
                  "tests[\"Legal first name has been found\"] = responseBody.has(\"legalFirstName\");",
                  "tests[\"Legal Last name has been found\"] = responseBody.has(\"legalLastName\");",
                  "tests[\"Preferred first name has been found\"] = responseBody.has(\"preferredFirstName\");",
                  "tests[\"Preferred last name has been found\"] = responseBody.has(\"preferredLastName\");",
                  "tests[\"Phone number has been found\"] = responseBody.has(\"phoneNumber\");",
                  "tests[\"Email address has been found\"] = responseBody.has(\"emailAddress\");",
                  "tests[\"Claim has been found\"] = responseBody.has(\"claims\");",
                  "",
                  "tests[\"Request has been found\"] = responseBody.has(\"request\");",
                  "tests[\"Request ID has been found\"] = responseBody.has(\"requestId\");",
                  "tests[\"Date of Request has been found\"] = responseBody.has(\"dateOfRequest\");",
                  "tests[\"Date of Decision has been found\"] = responseBody.has(\"dateOfDecision\");",
                  "tests[\"Status Code has been found\"] = responseBody.has(\"statusCode\");",
                  "tests[\"Status has been found\"] = responseBody.has(\"status\");",
                  "tests[\"Decision User has been found\"] = responseBody.has(\"decisionUser\");",
                  "tests[\"Course ID has been found\"] = responseBody.has(\"courseId\");",
                  "tests[\"Course Abbreviation has been found\"] = responseBody.has(\"courseAbbreviation\");",
                  "tests[\"Course Number has been found\"] = responseBody.has(\"courseNumber\");",
                  "tests[\"Course Suffix has been found\"] = responseBody.has(\"courseSuffix\");",
                  "tests[\"Course Name has been found\"] = responseBody.has(\"courseName\");",
                  "tests[\"Course Level has been found\"] = responseBody.has(\"courseLevel\");",
                  "tests[\"Course Description has been found\"] = responseBody.has(\"courseDescription\");",
                  "tests[\"Sections has been found\"] = responseBody.has(\"sections\");",
                  "tests[\"Section ID has been found\"] = responseBody.has(\"sectionId\");",
                  "tests[\"Days has been found\"] = responseBody.has(\"days\");",
                  "tests[\"Start Time has been found\"] = responseBody.has(\"startTime\");",
                  "tests[\"End Time has been found\"] = responseBody.has(\"endTime\");",
                  "tests[\"Instructor has been found\"] = responseBody.has(\"instructor\");",
                  "tests[\"Room has been found\"] = responseBody.has(\"room\");",
                  "tests[\"Term has been found\"] = responseBody.has(\"term\");",
                  "tests[\"Term Code has been found\"] = responseBody.has(\"termCode\");",
                  "tests[\"Term Name has been found\"] = responseBody.has(\"termName\");",
                  "tests[\"Term Year has been found\"] = responseBody.has(\"termYear\");",
                  "tests[\"Permission Number has been found\"] = responseBody.has(\"permissionNumber\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "G-TOKEN",
                "value": "ROM831ESV"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "https://api.staging.csunsaps.com/api/request/pending/",
            "description": "Where you see the request has been received but not yet reviewed."
          },
          "response": []
        },
        {
          "_postman_id": "17ff706b-73ec-61a0-838c-51b98b5e1971",
          "name": "DetailsOfRequest",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ff344-812a-48fd-af58-01ad1fdbf252",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "tests[\"Student has been found\"] = responseBody.has(\"student\");",
                  "tests[\"User ID has been found\"] = responseBody.has(\"userId\");",
                  "tests[\"Role has been found\"] = responseBody.has(\"role\");",
                  "tests[\"Legal first name has been found\"] = responseBody.has(\"legalFirstName\");",
                  "tests[\"Legal Last name has been found\"] = responseBody.has(\"legalLastName\");",
                  "tests[\"Preferred first name has been found\"] = responseBody.has(\"preferredFirstName\");",
                  "tests[\"Preferred last name has been found\"] = responseBody.has(\"preferredLastName\");",
                  "tests[\"Phone number has been found\"] = responseBody.has(\"phoneNumber\");",
                  "tests[\"Email address has been found\"] = responseBody.has(\"emailAddress\");",
                  "tests[\"Claim has been found\"] = responseBody.has(\"claims\");",
                  "",
                  "tests[\"Request has been found\"] = responseBody.has(\"request\");",
                  "tests[\"Request ID has been found\"] = responseBody.has(\"requestId\");",
                  "tests[\"Date of Request has been found\"] = responseBody.has(\"dateOfRequest\");",
                  "tests[\"Date of Decision has been found\"] = responseBody.has(\"dateOfDecision\");",
                  "tests[\"Status Code has been found\"] = responseBody.has(\"statusCode\");",
                  "tests[\"Status has been found\"] = responseBody.has(\"status\");",
                  "tests[\"Decision User has been found\"] = responseBody.has(\"decisionUser\");",
                  "tests[\"Course ID has been found\"] = responseBody.has(\"courseId\");",
                  "tests[\"Course Abbreviation has been found\"] = responseBody.has(\"courseAbbreviation\");",
                  "tests[\"Course Number has been found\"] = responseBody.has(\"courseNumber\");",
                  "tests[\"Course Suffix has been found\"] = responseBody.has(\"courseSuffix\");",
                  "tests[\"Course Name has been found\"] = responseBody.has(\"courseName\");",
                  "tests[\"Course Level has been found\"] = responseBody.has(\"courseLevel\");",
                  "tests[\"Course Description has been found\"] = responseBody.has(\"courseDescription\");",
                  "tests[\"Sections has been found\"] = responseBody.has(\"sections\");",
                  "tests[\"Section ID has been found\"] = responseBody.has(\"sectionId\");",
                  "tests[\"Days has been found\"] = responseBody.has(\"days\");",
                  "tests[\"Start Time has been found\"] = responseBody.has(\"startTime\");",
                  "tests[\"End Time has been found\"] = responseBody.has(\"endTime\");",
                  "tests[\"Instructor has been found\"] = responseBody.has(\"instructor\");",
                  "tests[\"Room has been found\"] = responseBody.has(\"room\");",
                  "tests[\"Term has been found\"] = responseBody.has(\"term\");",
                  "tests[\"Term Code has been found\"] = responseBody.has(\"termCode\");",
                  "tests[\"Term Name has been found\"] = responseBody.has(\"termName\");",
                  "tests[\"Term Year has been found\"] = responseBody.has(\"termYear\");",
                  "tests[\"Permission Number has been found\"] = responseBody.has(\"permissionNumber\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": "https://api.staging.csunsaps.com/api/request/detail/1",
            "description": "Where we get the details of requests a student has made. It includes their personal information and all the course information as well."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "f36521b1-df99-110b-af69-ae89d74b49e4",
      "name": "PreRequisite Controller",
      "description": "",
      "item": [
        {
          "_postman_id": "423f2d8b-4547-9408-9927-4707f9f28102",
          "name": "Prerequisite by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e4bb4df-6b09-4cd7-ab27-b8a99dd527ca",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var data = JSON.parse(responseBody);",
                  "",
                  "tests[\"Prerequisite ID has been found\"] = responseBody.has(\"preRequisiteId\");",
                  "tests[\"Program has been found\"] = responseBody.has(\"program\");",
                  "tests[\"Course ID has been found\"] = responseBody.has(\"courseId\");",
                  "tests[\"Course Abbreviation has been found\"] = responseBody.has(\"courseAbbrev\");",
                  "tests[\"Course Number has been found\"] = responseBody.has(\"courseNumber\");",
                  "tests[\"Course Suffix has been found\"] = responseBody.has(\"courseSuffix\");",
                  "tests[\"Prerequisite ID has been found\"] = responseBody.has(\"preReqId\");",
                  "tests[\"Prerequisite Course Abbreviation has been found\"] = responseBody.has(\"preRequisiteCourseAbbrev\");",
                  "tests[\"Prerequisite Course Number has been found\"] = responseBody.has(\"preRequisiteCourseNumber\");",
                  "tests[\"Prerequisite Course Suffix has been found\"] = responseBody.has(\"preRequisiteCourseSuffix\");",
                  "tests[\"Prerequisite Course Grade has been found\"] = responseBody.has(\"preRequisiteGrade\");",
                  "tests[\"Prerequisite Equivalent has been found\"] = responseBody.has(\"preRequisiteEquivalent\");",
                  "",
                  "tests[\"Other Prerequisites has been found\"] = responseBody.has(\"otherPrerequisites\");",
                  "tests[\"Other Prerequisites ID has been found\"] = responseBody.has(\"otherPreRequisiteId\");",
                  "tests[\"Course ID has been found\"] = responseBody.has(\"courseId\");",
                  "tests[\"Course Abbreviation has been found\"] = responseBody.has(\"courseAbbrev\");",
                  "tests[\"Course Number has been found\"] = responseBody.has(\"courseNumber\");",
                  "tests[\"Course Suffix has been found\"] = responseBody.has(\"courseSuffix\");",
                  "tests[\"Minimum Overall GPA has been found\"] = responseBody.has(\"minimumOveralGPA\");",
                  "tests[\"Mininum Unit has been found\"] = responseBody.has(\"mininumUnit\");",
                  "",
                  "tests[\"udwpe has been found\"] = responseBody.has(\"udwpe\");",
                  "tests[\"Unit Completed has been found\"] = responseBody.has(\"unitCompleted\");",
                  "tests[\"Major Required has been found\"] = responseBody.has(\"majorRequired\");",
                  "tests[\"Consent of Instructor has been found\"] = responseBody.has(\"consentOfInstructor\");"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": "https://api.staging.csunsaps.com/api/prerequisite/course/50000",
            "description": null
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "49b4709a-5a44-60cc-20ea-4e1c05de7bc6",
      "name": "Decision Reason Controller",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "16da8d0e-2cbd-3167-3345-9aa4129ba21a",
      "name": "Message Controller",
      "description": "",
      "item": []
    }
  ]
}